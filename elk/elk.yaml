---
# Source: isdargo/charts/fluent-bit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
  name: elk-fluent-bit
---
# Source: isdargo/templates/autoconfigure-carin-and-agent/autoconfigserviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oes-auto-configure-elk
---
# Source: isdargo/charts/fluent-bit/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "elk-fluent-bit-es-tls-secret"
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
type: Opaque
data:
  es-tls-ca.crt: ""
---
# Source: isdargo/charts/fluent-bit/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: elk-fluent-bit-config
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
data:
  fluent-bit-service.conf: |
    [SERVICE]
        Flush        1
        Daemon       Off
        Log_Level    info
        Parsers_File parsers.conf

  fluent-bit-input.conf: |
    [INPUT]
        Name             tail
        Path             /var/log/containers/*.log
        Parser           docker
        Tag              kube.*
        Refresh_Interval 5
        Mem_Buf_Limit    5MB
        Skip_Long_Lines  On
        

  fluent-bit-filter.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_Tag_Prefix     kube.var.log.containers.
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        

  fluent-bit-output.conf: |

    [OUTPUT]
        Name  es
        Match *
        Host  elasticsearch-master
        Port  9200
        Logstash_Format On
        Retry_Limit False
        Type  flb_type
        Time_Key @timestamp
        Replace_Dots On
        Logstash_Prefix kubernetes_cluster



        


  fluent-bit.conf: |
    @INCLUDE fluent-bit-service.conf
    @INCLUDE fluent-bit-input.conf
    @INCLUDE fluent-bit-filter.conf
    @INCLUDE fluent-bit-output.conf

  parsers.conf: |
---
# Source: isdargo/charts/fluent-bit/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: elk-fluent-bit-test
  labels:
    app: elk-fluent-bit
    chart: "fluent-bit-2.8.2"
    heritage: "Helm"
    release: "elk"
data:
  run.sh: |-
    @test "Test Elasticssearch Indices" {
      url="http://elasticsearch-master:9200/_cat/indices?format=json"
      body=$(curl $url)

      result=$(echo $body | jq -cr '.[] | select(.index | contains("kubernetes_cluster"))')
      [ "$result" != "" ]

      result=$(echo $body | jq -cr '.[] | select((.index | contains("kubernetes_cluster")) and (.health != "green"))')
      [ "$result" == "" ]
    }

  fluentd.conf: |-
    <source>
      @type forward
      bind 0.0.0.0
      port 24284
      shared_key 
    </source>

    <match **>
      @type stdout
    </match>
---
# Source: isdargo/charts/fluent-bit/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
  name: elk-fluent-bit
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
---
# Source: isdargo/charts/fluent-bit/templates/cluster-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
  name: elk-fluent-bit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elk-fluent-bit
subjects:
  - kind: ServiceAccount
    name: elk-fluent-bit
    namespace: elk
---
# Source: isdargo/templates/autoconfigure-carin-and-agent/autoconfigserviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oes-auto-configure-elk
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: oes-auto-configure-elk
  namespace: elk
---
# Source: isdargo/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elk"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    heritage: "Helm"
    release: "elk"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: isdargo/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elk"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: isdargo/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elk-kibana
  labels:
    app: kibana
    release: "elk"
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5601
      protocol: TCP
      name: http
      targetPort: 5601
  selector:
    app: kibana
    release: "elk"
---
# Source: isdargo/charts/fluent-bit/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: elk-fluent-bit
  labels:
    app: fluent-bit
    chart: fluent-bit-2.8.2
    heritage: Helm
    release: elk
spec:
  selector:
    matchLabels:
      app: fluent-bit
      release: elk
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fluent-bit
        release: elk
      annotations:
        checksum/config: 7837ee2e1b6c4f36d84026f2c0eb4438e0963a6f5a1bda44143dfe418ffeec12
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirst
      serviceAccountName: elk-fluent-bit
      containers:
      - name: fluent-bit
        image: "fluent/fluent-bit:1.3.2"
        imagePullPolicy: "Always"
        env:
          []
        resources:
          {}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit.conf
          subPath: fluent-bit.conf
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit-service.conf
          subPath: fluent-bit-service.conf
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit-input.conf
          subPath: fluent-bit-input.conf
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit-filter.conf
          subPath: fluent-bit-filter.conf
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit-output.conf
          subPath: fluent-bit-output.conf

      terminationGracePeriodSeconds: 10
      
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          name: elk-fluent-bit-config
---
# Source: isdargo/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elk-kibana
  labels:
    app: kibana
    release: "elk"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kibana
      release: "elk"
  template:
    metadata:
      labels:
        app: kibana
        release: "elk"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
      containers:
      - name: kibana
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/kibana/kibana:7.5.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://elasticsearch-master:9200"
          - name: SERVER_HOST
            value: "0.0.0.0"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                http () {
                    local path="${1}"
                    set -- -XGET -s --fail

                    if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                      set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                    fi

                    STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                    if [[ "${STATUS}" -eq 200 ]]; then
                      exit 0
                    fi

                    echo "Error: Got HTTP code ${STATUS} but expected a 200"
                    exit 1
                }

                http "/app/kibana"
        ports:
        - containerPort: 5601
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                until curl localhost:5601; do echo "Waiting for Kibana to be available..."; sleep 5; done; until curl elasticsearch-master:9200; do echo "Waiting for Elasticsearch to be available..."; sleep 5; done; sleep 60; curl https://raw.githubusercontent.com/OpsMx/enterprise-argo/main/scripts/kibana/kibana_objects.ndjson > /tmp/kibana_objects.ndjson; curl -X POST "localhost:5601/api/saved_objects/_import?overwrite=true" -H "kbn-xsrf: true" --form file=@/tmp/kibana_objects.ndjson 2>&1 1> /tmp/postStart.out;
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
        volumeMounts:
---
# Source: isdargo/charts/elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elk"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        heritage: "Helm"
        release: "elk"
        chart: "elasticsearch"
        app: "elasticsearch-master"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.0"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.0"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                # If the node is starting up wait for the cluster to be ready (request params: 'wait_for_status=green&timeout=1s' )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                http () {
                    local path="${1}"
                    if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                      BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                    else
                      BASIC_AUTH=''
                    fi
                    curl -XGET -s -k --fail ${BASIC_AUTH} http://127.0.0.1:9200${path}
                }

                if [ -f "${START_FILE}" ]; then
                    echo 'Elasticsearch is already running, lets check the node is healthy and there are master nodes available'
                    http "/_cluster/health?timeout=0s"
                else
                    echo 'Waiting for elasticsearch cluster to become cluster to be ready (request params: "wait_for_status=green&timeout=1s" )'
                    if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                        touch ${START_FILE}
                        exit 0
                    else
                        echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                        exit 1
                    fi
                fi
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ES_JAVA_OPTS
            value: "-Xmx1g -Xms1g"
          - name: node.data
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.master
            value: "true"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
---
# Source: isdargo/charts/elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elk-juune-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "elk-pwxgq-test"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.0"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
---
# Source: isdargo/charts/fluent-bit/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: elk-fluent-bit-test
  labels:
    app: elk-fluent-bit
    chart: "fluent-bit-2.8.2"
    heritage: "Helm"
    release: "elk"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: test-framework
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: elk-test
      image: "dwdraju/alpine-curl-jq"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
  - name: tests
    configMap:
      name: elk-fluent-bit-test
  - name: tools
    emptyDir: {}
  restartPolicy: Never
